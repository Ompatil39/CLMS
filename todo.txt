#flex ex for DASHBOARD structure
/* .ex {
  display: flex;
  width: 100%;
  gap: 0.7rem;
  margin-top: 0.7rem;
  flex-wrap: wrap;
}
.small {
  flex-grow: 0;
  align-items: center;
}
.large {
  flex-grow: 1;
  align-items: center;
} */

DASHBOARD:-
#TO_BE_ADDED
@CAN_BE_ADDED
~HARDER_TO_IMPLEMENT

       Lab Statistics-
        1_##_Lab Occupancy - Doughnut Chart (active, under maintenance, inactive).
        _##_Device Status - Bar Chart (working vs faulty devices).
        _##_Device Distribution by Lab - Horizontal Bar Chart (labs vs device count).
        _##_Faulty Devices per Lab - Stacked Bar Chart (labs vs count of faulty devices).
                @Labs Added Over Time - Line Chart (new labs added yearly/quarterly).
            @@Lab Maintenance vs Active Ratio - Doughnut Chart (labs under maintenance vs active).

        Grievance Statistics
        2_##_Grievances by Category - Bar Chart (e.g., hardware, software, internet issues).
        _##_Status of Grievances - Doughnut/Pie Chart (resolved vs pending vs in-progress).
        _##_Grievances Trend - Line Chart (grievances over time).
                ~Resolution Time Analysis - Bar Chart (average time taken to resolve grievances).
                @Grievances by Lab - Horizontal Bar Chart (labs vs grievances count).
                ~Grievance Escalation Rate - Line Chart (escalated grievances over time).
                ~Resolved Grievances Percentage - Gauge Chart (percentage of resolved grievances).
                Pending Grievances by Type - Stacked Bar Chart (types vs count of pending grievances).
                @Grievances Over the Last Week - Line Chart (daily grievance count for the week).

        Maintenance Statistics
                ~Pending Maintenance Tasks - Bar Chart (tasks by category).
        3_##_Maintenance Status Overview - Doughnut Chart (completed vs in-progress vs pending).
        _##_Maintenance Requests by Lab - Horizontal Bar Chart (labs vs requests).
        _##_Device Maintenance Trend - Line Chart (maintenance tasks over time).
                ~Maintenance Completion Rate - Gauge Chart (percentage of completed tasks).
                Faulty Devices Under Maintenance - Stacked Bar Chart (device type vs maintenance count).
                Maintenance Downtime Impact - Bar Chart (hours of downtime by maintenance).
                Resolved Maintenance Requests by Week - Line Chart (weekly resolutions).
        _##_Average Maintenance Time Per Device - Bar Chart (average time for each type of device).
                Top Labs Requiring Maintenance - Pie Chart (labs with the most maintenance requests).


TO DO WORK:- 
            1- Side menu bar hide text
            2- hover effect for cards with icons animation
            3- no image for user account circle, just diff icons for admin and incharge
            4- SKELETON LOADER FOR DASHBOARD

Here's the Chart.js code for the statistics marked with [ _##_ ] or similar notation:

---

### **Lab Statistics**

1. **Lab Occupancy [1_##]**  

const labOccupancyCtx = document.getElementById("labOccupancy").getContext("2d");
new Chart(labOccupancyCtx, {
  type: "doughnut",
  data: {
    labels: ["Active", "Under Maintenance", "Inactive"],
    datasets: [
      {
        data: [60, 25, 15], // Example data
        backgroundColor: ["#4caf50", "#ffc107", "#f44336"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
  },
});


2. **Device Status [ _##_ ]**  

const deviceStatusCtx = document.getElementById("deviceStatus").getContext("2d");
new Chart(deviceStatusCtx, {
  type: "bar",
  data: {
    labels: ["Working", "Faulty"],
    datasets: [
      {
        label: "Device Status",
        data: [150, 20], // Example data
        backgroundColor: ["#4caf50", "#f44336"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Device Status" } },
      y: { title: { display: true, text: "Count" } },
    },
  },
});


3. **Device Distribution by Lab [ _##_ ]**  

const deviceDistributionCtx = document.getElementById("deviceDistribution").getContext("2d");
new Chart(deviceDistributionCtx, {
  type: "bar",
  data: {
    labels: ["Lab A", "Lab B", "Lab C"],
    datasets: [
      {
        label: "Device Count",
        data: [40, 50, 30], // Example data
        backgroundColor: ["#2196f3", "#4caf50", "#ffc107"],
      },
    ],
  },
  options: {
    indexAxis: "y",
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Count" } },
      y: { title: { display: true, text: "Labs" } },
    },
  },
});


4. **Faulty Devices per Lab [ _##_ ]**  

const faultyDevicesCtx = document.getElementById("faultyDevices").getContext("2d");
new Chart(faultyDevicesCtx, {
  type: "bar",
  data: {
    labels: ["Lab A", "Lab B", "Lab C"],
    datasets: [
      {
        label: "Faulty PCs",
        data: [5, 8, 3],
        backgroundColor: "#f44336",
      },
      {
        label: "Faulty Printers",
        data: [2, 4, 1],
        backgroundColor: "#ff9800",
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Labs" } },
      y: { title: { display: true, text: "Count" } },
    },
  },
});


---

### **Grievance Statistics**

1. **Grievances by Category [2_##]**  

const grievancesByCategoryCtx = document.getElementById("grievancesByCategory").getContext("2d");
new Chart(grievancesByCategoryCtx, {
  type: "bar",
  data: {
    labels: ["Hardware", "Software", "Internet"],
    datasets: [
      {
        label: "Grievances",
        data: [15, 10, 5], // Example data
        backgroundColor: ["#2196f3", "#4caf50", "#ffc107"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Categories" } },
      y: { title: { display: true, text: "Count" } },
    },
  },
});


2. **Status of Grievances [ _##_ ]**  

const grievanceStatusCtx = document.getElementById("grievanceStatus").getContext("2d");
new Chart(grievanceStatusCtx, {
  type: "doughnut",
  data: {
    labels: ["Resolved", "Pending", "In Progress"],
    datasets: [
      {
        data: [30, 10, 5], // Example data
        backgroundColor: ["#4caf50", "#f44336", "#ffc107"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
  },
});


3. **Grievances Trend [ _##_ ]**  

const grievancesTrendCtx = document.getElementById("grievancesTrend").getContext("2d");
new Chart(grievancesTrendCtx, {
  type: "line",
  data: {
    labels: ["Jan", "Feb", "Mar", "Apr"], // Example months
    datasets: [
      {
        label: "Grievances",
        data: [5, 10, 8, 7], // Example data
        borderColor: "#2196f3",
        fill: false,
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Months" } },
      y: { title: { display: true, text: "Count" } },
    },
  },
});


4. **Pending Grievances by Type [ _##_ ]**  

const pendingGrievancesCtx = document.getElementById("pendingGrievances").getContext("2d");
new Chart(pendingGrievancesCtx, {
  type: "bar",
  data: {
    labels: ["Hardware", "Software", "Internet"],
    datasets: [
      {
        label: "Pending Grievances",
        data: [5, 3, 2], // Example data
        backgroundColor: ["#f44336", "#ff9800", "#4caf50"],
      },
    ],
  },
  options: {
    indexAxis: "y",
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Count" } },
      y: { title: { display: true, text: "Categories" } },
    },
  },
});


---

### **Maintenance Statistics**

1. **Maintenance Status Overview [3_##]**  

const maintenanceStatusCtx = document.getElementById("maintenanceStatus").getContext("2d");
new Chart(maintenanceStatusCtx, {
  type: "doughnut",
  data: {
    labels: ["Completed", "In Progress", "Pending"],
    datasets: [
      {
        data: [50, 20, 30], // Example data
        backgroundColor: ["#4caf50", "#ffc107", "#f44336"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
  },
});


2. **Maintenance Requests by Lab [ _##_ ]**  

const maintenanceRequestsCtx = document.getElementById("maintenanceRequests").getContext("2d");
new Chart(maintenanceRequestsCtx, {
  type: "bar",
  data: {
    labels: ["Lab A", "Lab B", "Lab C"],
    datasets: [
      {
        label: "Maintenance Requests",
        data: [5, 10, 3], // Example data
        backgroundColor: ["#2196f3", "#4caf50", "#ffc107"],
      },
    ],
  },
  options: {
    indexAxis: "y",
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Requests" } },
      y: { title: { display: true, text: "Labs" } },
    },
  },
});


Average Maintenance Time Per Device [ ## ]:
const averageMaintenanceTimeCtx = document
  .getElementById("averageMaintenanceTime")
  .getContext("2d");

new Chart(averageMaintenanceTimeCtx, {
  type: "bar",
  data: {
    labels: ["PC", "Printer", "Monitor", "Keyboard"], // Example device types
    datasets: [
      {
        label: "Average Maintenance Time (Hours)",
        data: [2.5, 3.0, 1.5, 1.0], // Example data in hours
        backgroundColor: ["#4caf50", "#2196f3", "#ffc107", "#f44336"],
      },
    ],
  },
  options: {
    plugins: { legend: { display: true, position: "top" } },
    scales: {
      x: { title: { display: true, text: "Device Types" } },
      y: { title: { display: true, text: "Time (Hours)" } },
    },
  },
});

  ECHARTS :-
// Initialize all charts
var myChart = echarts.init(document.getElementById("myChart"));
var maintenanceRequests = echarts.init(
  document.getElementById("maintenanceRequests")
);
var labOccupancy = echarts.init(document.getElementById("labOccupancy"));
var faultyDevices = echarts.init(document.getElementById("faultyDevices"));
var grievancesTrend = echarts.init(document.getElementById("grievancesTrend"));
var maintenanceStatus = echarts.init(
  document.getElementById("maintenanceStatus")
);
var deviceDistribution = echarts.init(
  document.getElementById("deviceDistribution")
);
var grievanceStatus = echarts.init(document.getElementById("grievanceStatus"));
var pendingGrievances = echarts.init(
  document.getElementById("pendingGrievances")
);
var grievancesByCategory = echarts.init(
  document.getElementById("grievancesByCategory")
);
var averageMaintenanceTime = echarts.init(
  document.getElementById("averageMaintenanceTime")
);
// ------------------------------
// Chart 1: Lab Status (Doughnut with Animation)
// ------------------------------
var chart1 = echarts.init(document.getElementById("myChart"));
var option1 = {
  tooltip: {
    trigger: "item",
    backgroundColor: "#d3e3f1",
    textStyle: { color: "#19374f" },
  },
  legend: {
    top: "5%",
    left: "center",
    textStyle: { fontSize: 10 },
  },
  series: [
    {
      name: "Lab Status",
      type: "pie",
      radius: ["40%", "70%"], // doughnut: inner and outer radii
      avoidLabelOverlap: false,
      label: { show: false },
      itemStyle: {
        borderColor: "#ffffff",
        borderWidth: 2,
      },
      data: [
        { value: 100, name: "Active", itemStyle: { color: "#2c4a63" } },
        {
          value: 30,
          name: "Under Maintenance",
          itemStyle: { color: "#fdaf4b" },
        },
        { value: 40, name: "In-Active", itemStyle: { color: "#f3545d" } },
      ],
    },
  ],
  animationDuration: 1000, // approximate duration
  animationEasing: "cubicOut",
};
chart1.setOption(option1);

// ------------------------------
// Chart 2: Maintenance Requests (Bar with Bounce Animation)
// ------------------------------
var chart2 = echarts.init(document.getElementById("maintenanceRequests"));
var option2 = {
  tooltip: { trigger: "axis" },
  xAxis: {
    type: "category",
    data: [
      "Lab 1",
      "Lab 2",
      "Lab 3",
      "Lab 4",
      "Lab 5",
      "Lab 6",
      "Lab 7",
      "Lab 8",
    ],
  },
  yAxis: {
    type: "value",
    min: 0,
  },
  series: [
    {
      name: "Maintenance Requests",
      type: "bar",
      data: [7, 3, 9, 4, 6, 3, 4, 2],
      barWidth: 50,
      itemStyle: {
        // Cycle through the three provided colors:
        color: function (params) {
          var colors = ["#80b1da", "#fdaf4b", "#1d7af3"];
          return colors[params.dataIndex % colors.length];
        },
      },
      // (Border styling on bars is not as straightforward in ECharts; using emphasis here as an example)
      emphasis: {
        itemStyle: {
          borderColor: "#ffffff",
          borderWidth: 2,
        },
      },
    },
  ],
  animationDuration: 1000,
  animationEasing: "bounceOut",
};
chart2.setOption(option2);

// ------------------------------
// Chart 3: Device Distribution (Horizontal Bar with Slide Animation)
// ------------------------------
var chart3 = echarts.init(document.getElementById("deviceDistribution"));
var option3 = {
  tooltip: { trigger: "axis" },
  legend: {
    data: ["Device Count"],
    top: "top",
  },
  xAxis: {
    type: "value",
    name: "Count",
  },
  yAxis: {
    type: "category",
    name: "Labs",
    data: [
      "Lab 1",
      "Lab 2",
      "Lab 3",
      "Lab 4",
      "Lab 5",
      "Lab 6",
      "Lab 7",
      "Lab 8",
    ],
  },
  series: [
    {
      name: "Device Count",
      type: "bar",
      data: [40, 50, 30, 45, 25, 35, 20, 15],
      itemStyle: {
        color: function (params) {
          var colors = ["#80b1da", "#fdaf4b", "#1d7af3"];
          return colors[params.dataIndex % colors.length];
        },
      },
    },
  ],
  animationDuration: 1500,
  animationEasing: "cubicInOut",
};
chart3.setOption(option3);

// ------------------------------
// Chart 4: Faulty Devices (Bar with Two Series)
// ------------------------------
var chart4 = echarts.init(document.getElementById("faultyDevices"));
var option4 = {
  tooltip: { trigger: "axis" },
  legend: {
    data: ["Faulty PCs", "Faulty Printers"],
    top: "top",
  },
  xAxis: {
    type: "category",
    name: "Labs",
    data: [
      "Lab 1",
      "Lab 2",
      "Lab 3",
      "Lab 4",
      "Lab 5",
      "Lab 6",
      "Lab 7",
      "Lab 8",
    ],
  },
  yAxis: {
    type: "value",
    name: "Count",
  },
  series: [
    {
      name: "Faulty PCs",
      type: "bar",
      data: [5, 8, 3, 6, 4, 2, 7, 1],
      itemStyle: { color: "#f3545d" },
    },
    {
      name: "Faulty Printers",
      type: "bar",
      data: [2, 4, 1, 3, 2, 1, 4, 2],
      itemStyle: { color: "#80b1da" },
    },
  ],
};
chart4.setOption(option4);

// ------------------------------
// Chart 5: Grievances by Category (Bar with Fade Animation)
// ------------------------------
var chart5 = echarts.init(document.getElementById("grievancesByCategory"));
var option5 = {
  tooltip: { trigger: "axis" },
  legend: {
    data: ["Grievances"],
    top: "top",
  },
  xAxis: {
    type: "category",
    name: "Categories",
    data: ["Hardware", "Software", "Internet"],
  },
  yAxis: {
    type: "value",
    name: "Count",
  },
  series: [
    {
      name: "Grievances",
      type: "bar",
      data: [15, 10, 5],
      itemStyle: {
        color: function (params) {
          var colors = ["#177dff", "#4caf50", "#fdaf4b"];
          return colors[params.dataIndex];
        },
      },
    },
  ],
  animationDuration: 1200,
  animationEasing: "cubicOut",
};
chart5.setOption(option5);

// ------------------------------
// Chart 6: Grievance Status (Pie Chart with Rotation Animation)
// ------------------------------
var chart6 = echarts.init(document.getElementById("grievanceStatus"));
var option6 = {
  tooltip: { trigger: "item" },
  legend: { top: "top" },
  series: [
    {
      name: "Grievance Status",
      type: "pie",
      radius: "70%",
      itemStyle: {
        borderColor: "#ffffff",
        borderWidth: 2,
      },
      data: [
        { value: 30, name: "Resolved", itemStyle: { color: "#2c4a63" } },
        { value: 10, name: "Pending", itemStyle: { color: "#fdaf4b" } },
        { value: 5, name: "In Progress", itemStyle: { color: "#f3545d" } },
      ],
    },
  ],
  animationDuration: 1000,
  animationEasing: "cubicOut",
};
chart6.setOption(option6);

// ------------------------------
// Chart 7: Grievances Trend (Line with Default Animation)
// ------------------------------
var chart7 = echarts.init(document.getElementById("grievancesTrend"));
var option7 = {
  tooltip: { trigger: "axis" },
  legend: { data: ["Grievances"], top: "top" },
  xAxis: {
    type: "category",
    name: "Months",
    data: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug"],
  },
  yAxis: {
    type: "value",
    name: "Count",
  },
  series: [
    {
      name: "Grievances",
      type: "line",
      data: [3, 8, 7, 12, 6, 9, 7, 10],
      lineStyle: { color: "#2c4a63" },
      itemStyle: { color: "#2c4a63" },
      // No areaStyle since fill: false in Chart.js
    },
  ],
};
chart7.setOption(option7);

// ------------------------------
// Chart 8: Maintenance Status (Doughnut with Scale Animation)
// ------------------------------
var chart8 = echarts.init(document.getElementById("maintenanceStatus"));
var option8 = {
  tooltip: { trigger: "item" },
  legend: { top: "top" },
  series: [
    {
      name: "Maintenance Status",
      type: "pie",
      radius: ["40%", "70%"],
      itemStyle: {
        borderColor: "#ffffff",
        borderWidth: 2,
      },
      data: [
        { value: 50, name: "Completed", itemStyle: { color: "#2c4a63" } },
        { value: 20, name: "In Progress", itemStyle: { color: "#fdaf4b" } },
        { value: 30, name: "Pending", itemStyle: { color: "#f3545d" } },
      ],
    },
  ],
  animationDuration: 1000,
  animationEasing: "cubicOut",
};
chart8.setOption(option8);

// ------------------------------
// Chart 9: Pending Grievances (Horizontal Bar with Bounce Animation)
// ------------------------------
var chart9 = echarts.init(document.getElementById("pendingGrievances"));
var option9 = {
  tooltip: { trigger: "axis" },
  legend: { data: ["Pending Grievances"], top: "top" },
  xAxis: {
    type: "value",
    name: "Count",
  },
  yAxis: {
    type: "category",
    name: "Categories",
    data: ["Hardware", "Software", "Internet"],
  },
  series: [
    {
      name: "Pending Grievances",
      type: "bar",
      data: [5, 3, 2],
      itemStyle: {
        color: function (params) {
          var colors = ["#80b6f4", "#4caf50", "#fdaf4b"];
          return colors[params.dataIndex];
        },
      },
    },
  ],
  animationDuration: 1000,
  animationEasing: "bounceOut",
};
chart9.setOption(option9);

// ------------------------------
// GAUGE CHART: Lab Occupancy (Semi-Circular Doughnut Gauge)
// ------------------------------
var chartGauge = echarts.init(document.getElementById("labOccupancy"));
/*
  To simulate a half-doughnut (semi-circular gauge) in ECharts,
  we add an extra (invisible) data item to “complete” the circle.
  Here the actual values (7, 1, 0) sum to 8.
*/
var optionGauge = {
  tooltip: { trigger: "item" },
  legend: { top: "top" },
  series: [
    {
      name: "Lab Occupancy",
      type: "pie",
      radius: ["50%", "100%"],
      center: ["50%", "75%"], // push the chart downward to show a semi-circle
      startAngle: 180,
      label: { show: false },
      data: [
        { value: 7, name: "Active", itemStyle: { color: "#2c4a63" } },
        {
          value: 1,
          name: "Under Maintenance",
          itemStyle: { color: "#fdaf4b" },
        },
        { value: 0, name: "In-Active", itemStyle: { color: "#f3545d" } },
        // Invisible data item to fill the bottom half of the circle
        {
          value: 8,
          name: "",
          itemStyle: { color: "transparent" },
          tooltip: { show: false },
          label: { show: false },
        },
      ],
    },
  ],
  animationDuration: 1000,
  animationEasing: "cubicOut",
};
chartGauge.setOption(optionGauge);

// ------------------------------
// Chart 10: Average Maintenance Time (Bar with Fade Animation)
// ------------------------------
var chart10 = echarts.init(document.getElementById("averageMaintenanceTime"));
var option10 = {
  tooltip: { trigger: "axis" },
  legend: {
    data: ["Average Maintenance Time (Hours)"],
    top: "top",
  },
  xAxis: {
    type: "category",
    name: "Device Types",
    data: ["PC", "Printer", "Monitor", "Keyboard"],
  },
  yAxis: {
    type: "value",
    name: "Time (Hours)",
  },
  series: [
    {
      name: "Average Maintenance Time (Hours)",
      type: "bar",
      data: [2.5, 3.0, 1.5, 1.0],
      itemStyle: {
        color: function (params) {
          var colors = ["#2c4a63", "#fdaf4b", "#80b6f4", "#1d7af3"];
          return colors[params.dataIndex];
        },
      },
    },
  ],
  animationDuration: 1000,
  animationEasing: "cubicOut",
};
chart10.setOption(option10);

// Make charts responsive
window.addEventListener("resize", function () {
  myChart.resize();
  maintenanceRequests.resize();
  labOccupancy.resize();
  faultyDevices.resize();
  grievancesTrend.resize();
  maintenanceStatus.resize();
  deviceDistribution.resize();
  grievanceStatus.resize();
  pendingGrievances.resize();
  grievancesByCategory.resize();
  averageMaintenanceTime.resize();
});
